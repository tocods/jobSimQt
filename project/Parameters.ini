[General]
network = TargetNetwork
sim-time-limit = 1.5s
**.statistic-recording = false
*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth[*].bitrate = 100Mbps
**.eth[*].queue.typename = "DropTailQueue"
**.eth[*].queue.packetCapacity = 20
**.forwarding = false
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
**.tcp.tcpAlgorithmClass = "TcpReno"
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535
**.tcp.delayedAcksEnabled = false
**.tcp.nagleEnabled = true
**.tcp.limitedTransmitEnabled = false
**.tcp.increasedIWEnabled = false
**.tcp.sackSupport = false
**.tcp.windowScalingSupport = false
**.tcp.timestampSupport = false
**.tcp.mss = 1452
*.configurator.config = xml("<config><interface hosts='**' address='192.x.x.x' netmask='255.x.x.x'/></config>")
*.udp_sender.numApps = 1
*.udp_sender.app[0].typename = "UdpApp615"
*.udp_sender.app[0].source.packetLength = 1200B
*.udp_sender.app[0].source.productionInterval = exponential(100us)
*.udp_sender.app[0].io.destAddress = "udp_receiver"
*.udp_sender.app[0].io.destPort = 1000
*.udp_sender.app[0].sink.typename = ""

*.tcp_sender.numApps = 1
*.tcp_sender.app[0].typename = "TcpSessionApp"
*.tcp_sender.app[0].sendBytes = 20MiB
*.tcp_sender.app[0].active = true
*.tcp_sender.app[0].localPort = 1000
*.tcp_sender.app[0].connectAddress = "tcp_receiver"
*.tcp_sender.app[0].connectPort = 1001
*.tcp_sender.app[0].tOpen = 0s
*.tcp_sender.app[0].tSend = 0s
*.tcp_sender.app[0].tClose = 0s
*.tcp_sender.app[0].sendScript = ""

*.udp_receiver.numApps = 1
*.udp_receiver.app[0].typename = "UdpApp615"
*.udp_receiver.app[0].source.typename = ""
*.udp_receiver.app[0].io.destPort = -1
*.udp_receiver.app[0].io.localPort = 1000
*.udp_receiver.app[0].sink.flowName = "udp"

*.tcp_receiver.numApps = 1
*.tcp_receiver.app[0].typename = "TcpSinkApp"
*.tcp_receiver.app[0].localPort = 1001
*.tcp_receiver.app[0].flowName = "tcp"

*.tsn_sender1.numApps = 1
*.tsn_sender1.app[0].typename = "UdpApp615"
*.tsn_sender1.app[0].source.packetLength = 946B
*.tsn_sender1.app[0].source.productionInterval = exponential(200us)
*.tsn_sender1.app[0].io.destAddress = "tsn_receiver"
*.tsn_sender1.app[0].io.destPort = 1000
*.tsn_sender1.app[0].sink.typename = ""

*.tsn_sender1.hasOutgoingStreams = true
*.tsn_sender1.bridging.streamIdentifier.identifier.mapping = [{stream: "best-effort", packetfilter: expr(udp.destPort == 1000)}]
*.tsn_sender1.bridging.streamCoder.encoder.mapping = [{stream: "best-effort", pcp: 0},{stream: "time-triggered", pcp: 4},{stream: "ack", pcp: 5}]

*.tsn_sender2.numApps = 1
*.tsn_sender2.app[0].typename = "TcpSessionApp"
*.tsn_sender2.app[0].sendBytes = 20MiB
*.tsn_sender2.app[0].active = true
*.tsn_sender2.app[0].localPort = 1000
*.tsn_sender2.app[0].connectAddress = "tsn_receiver"
*.tsn_sender2.app[0].connectPort = 1001
*.tsn_sender2.app[0].tOpen = 0s
*.tsn_sender2.app[0].tSend = 0s
*.tsn_sender2.app[0].tClose = 0s
*.tsn_sender2.app[0].sendScript = ""

*.tsn_sender2.hasOutgoingStreams = true
*.tsn_sender2.bridging.streamIdentifier.identifier.mapping = [{stream: "time-triggered", packetfilter: expr(tcp.destPort == 1001)}]
*.tsn_sender2.bridging.streamCoder.encoder.mapping = [{stream: "best-effort", pcp: 0},{stream: "time-triggered", pcp: 4},{stream: "ack", pcp: 5}]

*.tsn_receiver.numApps = 2
*.tsn_receiver.app[0].typename = "UdpApp615"
*.tsn_receiver.app[0].source.typename = ""
*.tsn_receiver.app[0].io.destPort = -1
*.tsn_receiver.app[0].io.localPort = 1000
*.tsn_receiver.app[0].sink.flowName = "tsn_udp"

*.tsn_receiver.app[1].typename = "TcpSinkApp"
*.tsn_receiver.app[1].localPort = 1001
*.tsn_receiver.app[1].flowName = "tsn_tcp"

*.tsn_receiver.hasOutgoingStreams = true
*.tsn_receiver.bridging.streamIdentifier.identifier.mapping = [{stream: "time-triggered", packetfilter: expr(tcp.destPort == 1000)}]
*.tsn_receiver.bridging.streamCoder.encoder.mapping = [{stream: "best-effort", pcp: 0},{stream: "time-triggered", pcp: 4},{stream: "ack", pcp: 5}]

*.publisher1.numApps = 1
*.publisher1.app[0].typename = "DDSPublishApp"
*.publisher1.app[0].io.receiveBroadcast = true
*.publisher1.app[0].io.publish = "Topic1"
*.publisher1.app[0].io.destPort = 1000
*.publisher1.ipv4.ip.limitedBroadcast = true
*.publisher1.app[0].source.packetLength = 5000B
*.publisher1.app[0].source.productionInterval = exponential(0.5ms)
*.publisher1.app[0].sink.typename = ""

*.subscriber3.numApps = 1
*.subscriber3.app[0].typename = "DDSSubscribeApp"
*.subscriber3.app[0].source.subscribe = "Topic1@1000"
*.subscriber3.app[0].io.localPort = 1000
*.subscriber3.app[0].io.nackCountdown = 0.25ms
*.subscriber3.app[0].source.packetLength = 20B
*.subscriber3.ipv4.ip.limitedBroadcast = true 
*.subscriber3.app[0].sink.flowName = "dds3"

*.subscriber2.numApps = 1
*.subscriber2.app[0].typename = "DDSSubscribeApp"
*.subscriber2.app[0].source.subscribe = "Topic1@1000"
*.subscriber2.app[0].io.localPort = 1000
*.subscriber2.app[0].io.nackCountdown = 0.25ms
*.subscriber2.app[0].source.packetLength = 20B
*.subscriber2.ipv4.ip.limitedBroadcast = true 
*.subscriber2.app[0].sink.flowName = "dds2"

*.subscriber1.numApps = 1
*.subscriber1.app[0].typename = "DDSSubscribeApp"
*.subscriber1.app[0].source.subscribe = "Topic1@1000"
*.subscriber1.app[0].io.localPort = 1000
*.subscriber1.app[0].io.nackCountdown = 0.25ms
*.subscriber1.app[0].source.packetLength = 20B
*.subscriber1.ipv4.ip.limitedBroadcast = true 
*.subscriber1.app[0].sink.flowName = "dds1"

*.switch.eth[*].bitrate = 100Mbps
*.tsn_switch.eth[*].bitrate = 100Mbps
*.tsn_switch.hasEgressTrafficShaping = true
*.tsn_switch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]
*.tsn_switch.eth[*].macLayer.queue.numTrafficClasses = 2
*.tsn_switch.eth[*].macLayer.queue.*[0].display-name = "best-effort"
*.tsn_switch.eth[*].macLayer.queue.transmissionGate[0].offset = 0ms
*.tsn_switch.eth[*].macLayer.queue.transmissionGate[0].durations = [8ms,2ms]
*.tsn_switch.eth[*].macLayer.queue.transmissionGate[0].initiallyOpen = false
*.tsn_switch.eth[*].macLayer.queue.queue[0].packetCapacity = 100
*.tsn_switch.eth[*].macLayer.queue.*[1].display-name = "time-triggered"
*.tsn_switch.eth[*].macLayer.queue.transmissionGate[1].offset = 0ms
*.tsn_switch.eth[*].macLayer.queue.transmissionGate[1].durations = [8ms,2ms]
*.tsn_switch.eth[*].macLayer.queue.transmissionGate[1].initiallyOpen = true
*.tsn_switch.eth[*].macLayer.queue.queue[1].packetCapacity = 100


